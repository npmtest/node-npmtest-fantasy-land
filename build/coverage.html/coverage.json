{"/home/travis/build/npmtest/node-npmtest-fantasy-land/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_fantasy_land */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/lib.npmtest_fantasy_land.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/lib.npmtest_fantasy_land.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_fantasy_land */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_fantasy_land = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_fantasy_land = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-fantasy-land && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_fantasy_land */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_fantasy_land","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_fantasy_land.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_fantasy_land.rollup.js'] =","            local.assetsDict['/assets.npmtest_fantasy_land.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_fantasy_land.__dirname + '/lib.npmtest_fantasy_land.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":35,"column":5}},"2":{"start":{"line":8,"column":2},"end":{"line":27,"column":4}},"3":{"start":{"line":29,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":29}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":31}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":32}},{"start":{"line":29,"column":36},"end":{"line":29,"column":70}}]}},"code":["(function() {","","  'use strict';","","  /* eslint comma-dangle: [\"off\"], no-var: [\"off\"], strict: [\"error\", \"function\"] */","  /* global self */","","  var mapping = {","    equals: 'fantasy-land/equals',","    lte: 'fantasy-land/lte',","    concat: 'fantasy-land/concat',","    empty: 'fantasy-land/empty',","    map: 'fantasy-land/map',","    contramap: 'fantasy-land/contramap',","    ap: 'fantasy-land/ap',","    of: 'fantasy-land/of',","    alt: 'fantasy-land/alt',","    zero: 'fantasy-land/zero',","    reduce: 'fantasy-land/reduce',","    traverse: 'fantasy-land/traverse',","    chain: 'fantasy-land/chain',","    chainRec: 'fantasy-land/chainRec',","    extend: 'fantasy-land/extend',","    extract: 'fantasy-land/extract',","    bimap: 'fantasy-land/bimap',","    promap: 'fantasy-land/promap'","  };","","  if (typeof module === 'object' && typeof module.exports === 'object') {","    module.exports = mapping;","  } else {","    self.FantasyLand = mapping;","  }","","}());",""],"l":{"1":1,"8":1,"29":1,"30":1,"32":0}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/compose.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":27},"end":{"line":10,"column":39}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":28},"end":{"line":13,"column":40}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":31},"end":{"line":16,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"6":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":68}},"8":{"start":{"line":11,"column":48},"end":{"line":11,"column":64}},"9":{"start":{"line":11,"column":53},"end":{"line":11,"column":64}},"10":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":52}},"12":{"start":{"line":14,"column":37},"end":{"line":14,"column":49}},"13":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"14":{"start":{"line":17,"column":2},"end":{"line":17,"column":31}}},"branchMap":{},"code":["'use strict';","","const {tagged} = require('daggy');","","const fl = require('..');","const {equality} = require('./func');","","const Compose = module.exports = tagged('c');","Compose[fl.of] = Compose;","Compose.prototype[fl.ap] = function(f) {","  return Compose(this.c[fl.ap](f.c[fl.map](u => y => y[fl.ap](u))));","};","Compose.prototype[fl.map] = function(f) {","  return Compose(this.c[fl.map](y => y[fl.map](f)));","};","Compose.prototype[fl.equals] = function(x) {","  return equality(this.c, x.c);","};",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":0,"13":1,"14":0,"16":1,"17":0}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/func.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/func.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":90}},"3":{"start":{"line":4,"column":27},"end":{"line":4,"column":89}},"4":{"start":{"line":5,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":59}},"6":{"start":{"line":6,"column":39},"end":{"line":6,"column":59}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":25}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":25}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":81}},"10":{"start":{"line":13,"column":0},"end":{"line":16,"column":2}}},"branchMap":{"1":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":64},"end":{"line":4,"column":79}},{"start":{"line":4,"column":82},"end":{"line":4,"column":89}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"3":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":9},"end":{"line":10,"column":24}},{"start":{"line":10,"column":29},"end":{"line":10,"column":47}},{"start":{"line":10,"column":51},"end":{"line":10,"column":69}},{"start":{"line":10,"column":74},"end":{"line":10,"column":80}}]}},"code":["'use strict';","","const fl = require('../');","const equality = (x, y) => typeof x[fl.equals] === 'function' ? x[fl.equals](y) : x === y;","const lte = (x, y) => {","  if (typeof y[fl.lte] === 'function') return y[fl.lte](x);","","  const typeX = typeof x;","  const typeY = typeof y;","  return typeX === typeY && (typeX === 'string' || typeX === 'number') && x <= y;","};","","module.exports = {","  equality,","  lte,","};",""],"l":{"3":1,"4":1,"5":1,"6":0,"8":0,"9":0,"10":0,"13":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/id.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/id.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":26},"end":{"line":11,"column":38}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":35}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":26},"end":{"line":21,"column":38}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":26},"end":{"line":28,"column":43}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":34}}},"6":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":35}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":34}}},"8":{"name":"(anonymous_8)","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":49}}},"9":{"name":"(anonymous_9)","line":53,"loc":{"start":{"line":53,"column":25},"end":{"line":53,"column":37}}},"10":{"name":"(anonymous_10)","line":58,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":33}}},"11":{"name":"(anonymous_11)","line":69,"loc":{"start":{"line":69,"column":26},"end":{"line":69,"column":38}}},"12":{"name":"(anonymous_12)","line":74,"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":24}}},"13":{"name":"(anonymous_13)","line":79,"loc":{"start":{"line":79,"column":27},"end":{"line":79,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"5":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":39}},"7":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":34}},"9":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":48}},"11":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"13":{"start":{"line":32,"column":0},"end":{"line":34,"column":2}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"15":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"17":{"start":{"line":42,"column":0},"end":{"line":44,"column":2}},"18":{"start":{"line":43,"column":2},"end":{"line":43,"column":37}},"19":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":42}},"21":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"23":{"start":{"line":58,"column":0},"end":{"line":66,"column":2}},"24":{"start":{"line":59,"column":2},"end":{"line":59,"column":46}},"25":{"start":{"line":59,"column":21},"end":{"line":59,"column":44}},"26":{"start":{"line":60,"column":2},"end":{"line":60,"column":45}},"27":{"start":{"line":60,"column":21},"end":{"line":60,"column":43}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":38}},"29":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"30":{"start":{"line":63,"column":4},"end":{"line":63,"column":45}},"31":{"start":{"line":65,"column":2},"end":{"line":65,"column":29}},"32":{"start":{"line":69,"column":0},"end":{"line":71,"column":2}},"33":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"34":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"35":{"start":{"line":75,"column":2},"end":{"line":75,"column":19}},"36":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"37":{"start":{"line":80,"column":2},"end":{"line":80,"column":20}}},"branchMap":{},"code":["'use strict';","","const fl = require('../');","const {equality, lte} = require('./func');","","const {tagged} = require('daggy');","","const Id = module.exports = tagged('value');","","// Setoid","Id.prototype[fl.equals] = function(b) {","  return equality(this.value, b.value);","};","","// Ord","Id.prototype[fl.lte] = function(b) {","  return lte(this.value, b.value);","};","","// Semigroup (value must also be a Semigroup)","Id.prototype[fl.concat] = function(b) {","  return new Id(this.value[fl.concat](b.value));","};","","// Monoid is not satisfiable since the type lacks a universal empty value","","// Foldable","Id.prototype[fl.reduce] = function(f, acc) {","  return f(acc, this.value);","};","","Id.prototype.toArray = function() {","  return [this.value];","};","","// Functor","Id.prototype[fl.map] = function(f) {","  return new Id(f(this.value));","};","","// Apply","Id.prototype[fl.ap] = function(b) {","  return new Id(b.value(this.value));","};","","// Traversable","Id.prototype[fl.traverse] = function(typeRep, f) {","  // the typeRep argument is only provided for types where map might fail.","  return f(this.value)[fl.map](Id[fl.of]);","};","","// Chain","Id.prototype[fl.chain] = function(f) {","  return f(this.value);","};","","// ChainRec","Id[fl.chainRec] = function(f, i) {","  const next = v => ({done: false, value: v});","  const done = v => ({done: true, value: v});","  let state = {done: false, value: i};","  while (state.done === false) {","    state = f(next, done, state.value).value;","  }","  return new Id(state.value);","};","","// Extend","Id.prototype[fl.extend] = function(f) {","  return new Id(f(this));","};","","// Applicative","Id[fl.of] = function(a) {","  return new Id(a);","};","","// Comonad","Id.prototype[fl.extract] = function() {","  return this.value;","};",""],"l":{"3":1,"4":1,"6":1,"8":1,"11":1,"12":0,"16":1,"17":0,"21":1,"22":0,"28":1,"29":0,"32":1,"33":0,"37":1,"38":0,"42":1,"43":0,"47":1,"49":0,"53":1,"54":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"69":1,"70":0,"74":1,"75":0,"79":1,"80":0}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/patch.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/patch.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":31},"end":{"line":7,"column":43}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":28},"end":{"line":10,"column":40}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":40}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":30},"end":{"line":16,"column":42}}},"5":{"name":"(anonymous_5)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":46}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":54}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":56}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":4}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":68}},"6":{"start":{"line":10,"column":2},"end":{"line":12,"column":4}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":31}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":29}},"9":{"start":{"line":13,"column":2},"end":{"line":15,"column":4}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"11":{"start":{"line":14,"column":29},"end":{"line":14,"column":40}},"12":{"start":{"line":16,"column":2},"end":{"line":18,"column":4}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"14":{"start":{"line":19,"column":2},"end":{"line":21,"column":4}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":45}},"16":{"start":{"line":20,"column":33},"end":{"line":20,"column":40}},"17":{"start":{"line":22,"column":2},"end":{"line":22,"column":54}},"18":{"start":{"line":23,"column":2},"end":{"line":28,"column":4}},"19":{"start":{"line":24,"column":4},"end":{"line":27,"column":6}},"20":{"start":{"line":25,"column":17},"end":{"line":25,"column":64}},"21":{"start":{"line":25,"column":42},"end":{"line":25,"column":62}},"22":{"start":{"line":25,"column":47},"end":{"line":25,"column":62}},"23":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"24":{"start":{"line":30,"column":4},"end":{"line":30,"column":26}},"25":{"start":{"line":32,"column":2},"end":{"line":32,"column":28}},"26":{"start":{"line":32,"column":25},"end":{"line":32,"column":27}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":67}}]}},"code":["'use strict';","","const fl = require('..');","","module.exports = () => {","  String.prototype[fl.concat] = String.prototype.concat;","  Array.prototype[fl.equals] = function(y) {","    return this.length === y.length && this.join('') === y.join('');","  };","  Array.prototype[fl.map] = function(f) {","    return this.map(x => f(x));","  };","  Array.prototype[fl.ap] = function(fs) {","    return fs[fl.chain](f => this.map(f));","  };","  Array.prototype[fl.chain] = function(f) {","    return [].concat(this.map(f));","  };","  Array.prototype[fl.reduce] = function(f, x) {","    return this.reduce((x, y) => f(x, y), x);","  };","  Array.prototype[fl.concat] = Array.prototype.concat;","  Array.prototype[fl.traverse] = function(typeRep, f) {","    return this[fl.map](f)[fl.reduce](","      (ys, x) => ys[fl.ap](x[fl.map](y => z => z[fl.concat](y))),","      typeRep[fl.of]([])","    );","  };","  Array.prototype[fl.alt] = function(b) {","    return this.concat(b);","  };","  Array[fl.zero] = () => [];","};",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"11":0,"13":0,"14":0,"16":0,"17":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/string_sum.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/string_sum.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":24},"end":{"line":12,"column":36}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":27},"end":{"line":15,"column":39}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":17}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"7":{"start":{"line":11,"column":22},"end":{"line":11,"column":29}},"8":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":24}},"10":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":27}},"12":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":31}}},"branchMap":{},"code":["'use strict';","","const {tagged} = require('daggy');","","const fl = require('..');","const {equality} = require('./func');","","// Special type of sum for the type of string.","const Sum = module.exports = tagged('v');","Sum[fl.of] = Sum;","Sum[fl.empty] = () => Sum('');","Sum.prototype[fl.map] = function(f) {","  return Sum(f(this.v));","};","Sum.prototype[fl.concat] = function(x) {","  return Sum(this.v + x.v);","};","Sum.prototype[fl.equals] = function(x) {","  return equality(this.v, x.v);","};",""],"l":{"3":1,"5":1,"6":1,"9":1,"10":1,"11":1,"12":1,"13":0,"15":1,"16":0,"18":1,"19":0}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/alt.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/alt.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":14,"column":28},"end":{"line":17,"column":1}},"4":{"start":{"line":14,"column":33},"end":{"line":17,"column":1}},"5":{"start":{"line":14,"column":38},"end":{"line":17,"column":1}},"6":{"start":{"line":14,"column":43},"end":{"line":17,"column":1}},"7":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"8":{"start":{"line":19,"column":29},"end":{"line":22,"column":1}},"9":{"start":{"line":19,"column":34},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":39},"end":{"line":22,"column":1}},"11":{"start":{"line":19,"column":44},"end":{"line":22,"column":1}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}}},"branchMap":{},"code":["'use strict';","","const {alt, map} = require('..');","","/**","","### Alt","","1. `a.alt(b).alt(c)` is equivalent to `a.alt(b.alt(c))` (associativity)","2. `a.alt(b).map(f)` is equivalent to `a.map(f).alt(b.map(f))` (distributivity)","","**/","","const associativity = eq => a => b => c => eq(","  a[alt](b)[alt](c),","  a[alt](b[alt](c))",");","","const distributivity = eq => a => b => f => eq(","  a[alt](b)[map](f),","  a[map](f)[alt](b[map](f))",");","","module.exports = {associativity, distributivity};",""],"l":{"3":1,"14":1,"19":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/alternative.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/alternative.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":14,"column":29},"end":{"line":17,"column":1}},"4":{"start":{"line":14,"column":34},"end":{"line":17,"column":1}},"5":{"start":{"line":14,"column":39},"end":{"line":17,"column":1}},"6":{"start":{"line":14,"column":44},"end":{"line":17,"column":1}},"7":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"8":{"start":{"line":19,"column":26},"end":{"line":22,"column":1}},"9":{"start":{"line":19,"column":32},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":37},"end":{"line":22,"column":1}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}}},"branchMap":{},"code":["'use strict';","","const {alt, zero, ap} = require('..');","","/**","","### Alternative","","1. `x.ap(f.alt(g))` is equivalent to `x.ap(f).alt(x.ap(g))` (distributivity)","1. `x.ap(M.zero())` is equivalent to `M.zero()` (annihilation)","","**/","","const distributivity = eq => x => f => g => eq(","  x[ap](f[alt](g)),","  x[ap](f)[alt](x[ap](g))",");","","const annihilation = T => eq => x => eq(","  x[ap](T[zero]()),","  T[zero]()",");","","module.exports = {distributivity, annihilation};",""],"l":{"3":1,"14":1,"19":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/applicative.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/applicative.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":16,"column":0},"end":{"line":20,"column":2}},"4":{"start":{"line":16,"column":23},"end":{"line":20,"column":1}},"5":{"start":{"line":16,"column":29},"end":{"line":20,"column":1}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":42}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}},"9":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"10":{"start":{"line":22,"column":26},"end":{"line":26,"column":1}},"11":{"start":{"line":22,"column":32},"end":{"line":26,"column":1}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":42}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"15":{"start":{"line":28,"column":0},"end":{"line":34,"column":2}},"16":{"start":{"line":28,"column":25},"end":{"line":34,"column":1}},"17":{"start":{"line":28,"column":31},"end":{"line":34,"column":1}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":18}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":66}}},"branchMap":{},"code":["'use strict';","","const {identity, thrush} = require('fantasy-combinators');","const {of, ap} = require('..');","","/**","","### Applicative","","1. `v.ap(A.of(x => x))` is equivalent to `v` (identity)","2. `A.of(x).ap(A.of(f))` is equivalent to `A.of(f(x))` (homomorphism)","3. `A.of(y).ap(u)` is equivalent to `u.ap(A.of(f => f(y)))` (interchange)","","**/","","const identityʹ = T => eq => x => {","  const a = T[of](x)[ap](T[of](identity));","  const b = T[of](x);","  return eq(a, b);","};","","const homomorphism = T => eq => x => {","  const a = T[of](x)[ap](T[of](identity));","  const b = T[of](identity(x));","  return eq(a, b);","};","","const interchange = T => eq => x => {","  const u = T[of](identity);","","  const a = T[of](x)[ap](u);","  const b = u[ap](T[of](thrush(x)));","  return eq(a, b);","};","","module.exports = {identity: identityʹ, homomorphism, interchange};",""],"l":{"3":1,"4":1,"16":1,"17":0,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"28":1,"29":0,"31":0,"32":0,"33":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/apply.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/apply.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":14,"column":0},"end":{"line":20,"column":2}},"4":{"start":{"line":14,"column":25},"end":{"line":20,"column":1}},"5":{"start":{"line":14,"column":31},"end":{"line":20,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":28}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":42}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":28}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}}},"branchMap":{},"code":["'use strict';","","const {identity, compose} = require('fantasy-combinators');","const {of, map, ap} = require('..');","","/**","","### Apply","","1. `v.ap(u.ap(a.map(f => g => x => f(g(x)))))` is equivalent to `v.ap(u).ap(a)` (composition)","","**/","","const composition = t => eq => x => {","  const y = t[of](identity);","","  const a = y[ap](y[ap](y[map](compose)));","  const b = y[ap](y)[ap](y);","  return eq(a, b);","};","","module.exports = {composition};",""],"l":{"3":1,"4":1,"14":1,"15":0,"17":0,"18":0,"19":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/bifunctor.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/bifunctor.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":14,"column":23},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":29},"end":{"line":18,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":44}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"9":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"10":{"start":{"line":20,"column":25},"end":{"line":24,"column":1}},"11":{"start":{"line":20,"column":31},"end":{"line":24,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":82}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":71}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}}},"branchMap":{},"code":["'use strict';","","const {identity, compose} = require('fantasy-combinators');","const {bimap} = require('..');","","/**","### Bifunctor","","1. `p.bimap(a =>, b => b)` is equivalent to `p` (identity)","2. `p.bimap(compose(f1)(f2), compose(g1)(g2))` is equivalent to `p.bimap(f1, g1).bimap(f2, g2)` (composition)","","**/","","const identityʹ = t => eq => x => {","  const a = t(x)[bimap](identity, identity);","  const b = t(x);","  return eq(a, b);","};","","const composition = t => eq => x => {","  const a = t(x)[bimap](compose(identity)(identity), compose(identity)(identity));","  const b = t(x)[bimap](identity, identity)[bimap](identity, identity);","  return eq(a, b);","};","","module.exports = {identity: identityʹ, composition};",""],"l":{"3":1,"4":1,"14":1,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/chain.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":13,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":13,"column":27},"end":{"line":17,"column":1}},"4":{"start":{"line":13,"column":33},"end":{"line":17,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":57}},"7":{"start":{"line":15,"column":33},"end":{"line":15,"column":55}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"branchMap":{},"code":["'use strict';","","const {of, chain} = require('..');","","/**","","### Chain","","1. `m.chain(f).chain(g)` is equivalent to `m.chain(x => f(x).chain(g))` (associativity)","","**/","","const associativity = t => eq => x => {","  const a = t[of](x)[chain](t[of])[chain](t[of]);","  const b = t[of](x)[chain](x => t[of](x)[chain](t[of]));","  return eq(a, b);","};","","module.exports = {associativity};",""],"l":{"3":1,"13":1,"14":0,"15":0,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/chainrec.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/chainrec.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"step","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":15,"column":25},"end":{"line":19,"column":1}},"4":{"start":{"line":15,"column":31},"end":{"line":19,"column":1}},"5":{"start":{"line":15,"column":36},"end":{"line":19,"column":1}},"6":{"start":{"line":15,"column":41},"end":{"line":19,"column":1}},"7":{"start":{"line":15,"column":46},"end":{"line":19,"column":1}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":88}},"9":{"start":{"line":16,"column":43},"end":{"line":16,"column":83}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":78}},"11":{"start":{"line":17,"column":32},"end":{"line":17,"column":71}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":50},"end":{"line":16,"column":65}},{"start":{"line":16,"column":68},"end":{"line":16,"column":83}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":50}},{"start":{"line":17,"column":53},"end":{"line":17,"column":70}}]}},"code":["'use strict';","","const {chain, map, chainRec} = require('..');","","/**","","### ChainRec","","1. `M.chainRec((next, done, v) => p(v) ? d(v).map(done) : n(v).map(next), i)`","   is equivalent to","   `(function step(v) { return p(v) ? d(v) : n(v).chain(step); }(i))`","   (equivalence)","**/","","const equivalence = T => eq => p => d => n => x => {","  const a = T[chainRec]((next, done, v) => p(v) ? d(v)[map](done) : n(v)[map](next), x);","  const b = (function step(v) { return p(v) ? d(v) : n(v)[chain](step); }(x));","  return eq(a, b);","};","","module.exports = {equivalence};",""],"l":{"3":1,"15":1,"16":0,"17":0,"18":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/comonad.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/comonad.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":15,"column":26},"end":{"line":19,"column":1}},"5":{"start":{"line":15,"column":32},"end":{"line":19,"column":1}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":46}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":17}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"9":{"start":{"line":21,"column":0},"end":{"line":25,"column":2}},"10":{"start":{"line":21,"column":27},"end":{"line":25,"column":1}},"11":{"start":{"line":21,"column":33},"end":{"line":25,"column":1}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":44}},"13":{"start":{"line":22,"column":30},"end":{"line":22,"column":42}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":47}}},"branchMap":{},"code":["'use strict';","","const {identity} = require('fantasy-combinators');","const {extend, extract} = require('..');","","/**","","### Comonad","","1. `w.extend(_w => _w.extract())` is equivalent to `w`","2. `w.extend(f).extract()` is equivalent to `f(w)`","","**/","","const leftIdentity = t => eq => x => {","  const a = t(x)[extend](identity)[extract]();","  const b = t(x);","  return eq(a, b);","};","","const rightIdentity = t => eq => x => {","  const a = t(x)[extend](w => w[extract]());","  const b = t(x);","  return eq(a, b);","};","","module.exports = {leftIdentity, rightIdentity};",""],"l":{"3":1,"4":1,"15":1,"16":0,"17":0,"18":0,"21":1,"22":0,"23":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/contravariant.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/contravariant.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":15,"column":23},"end":{"line":19,"column":1}},"5":{"start":{"line":15,"column":29},"end":{"line":19,"column":1}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":17}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"9":{"start":{"line":21,"column":0},"end":{"line":25,"column":2}},"10":{"start":{"line":21,"column":25},"end":{"line":25,"column":1}},"11":{"start":{"line":21,"column":31},"end":{"line":25,"column":1}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":57}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":59}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":52}}},"branchMap":{},"code":["'use strict';","","const {identity, compose} = require('fantasy-combinators');","const {contramap} = require('..');","","/*","","### Contravariant Functor","","1. `u.contramap(a => a)` is equivalent to `u` (identity)","2. `u.contramap(x => f(g(x)))` is equivalent to `u.contramap(f).contramap(g)` (composition)","","*/","","const identityʹ = t => eq => x => {","  const a = t(x)[contramap](identity);","  const b = t(x);","  return eq(a, b);","};","","const composition = t => eq => x => {","  const a = t(x)[contramap](compose(identity)(identity));","  const b = t(x)[contramap](identity)[contramap](identity);","  return eq(a, b);","};","","module.exports = {identity: identityʹ, composition};",""],"l":{"3":1,"4":1,"15":1,"16":0,"17":0,"18":0,"21":1,"22":0,"23":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/extend.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/extend.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":14,"column":27},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":33},"end":{"line":18,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":53}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":61}},"8":{"start":{"line":16,"column":30},"end":{"line":16,"column":59}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}}},"branchMap":{},"code":["'use strict';","","const {identity} = require('fantasy-combinators');","const {extend} = require('..');","","/**","","### Extend","","1. `w.extend(g).extend(f)` is equivalent to `w.extend(_w => f(_w.extend(g)))`","","**/","","const associativity = t => eq => x => {","  const a = t(x)[extend](identity)[extend](identity);","  const b = t(x)[extend](w => identity(w[extend](identity)));","  return eq(a, b);","};","","module.exports = {associativity};",""],"l":{"3":1,"4":1,"14":1,"15":0,"16":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/foldable.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/foldable.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":14,"column":27},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":33},"end":{"line":18,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":38}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":48}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}}},"branchMap":{},"code":["'use strict';","","const {identity} = require('fantasy-combinators');","const {reduce} = require('..');","","/**","","### Foldable","","1. `u.reduce` is equivalent to `u.toArray().reduce`","","**/","","const associativity = t => eq => x => {","  const a = t(x)[reduce](identity, x);","  const b = t(x).toArray()[reduce](identity, x);","  return eq(a, b);","};","","module.exports = {associativity};",""],"l":{"3":1,"4":1,"14":1,"15":0,"16":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/functor.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/functor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":14,"column":23},"end":{"line":18,"column":1}},"4":{"start":{"line":14,"column":29},"end":{"line":18,"column":1}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":31}},"6":{"start":{"line":15,"column":28},"end":{"line":15,"column":29}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"9":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"10":{"start":{"line":20,"column":26},"end":{"line":24,"column":1}},"11":{"start":{"line":20,"column":32},"end":{"line":24,"column":1}},"12":{"start":{"line":20,"column":37},"end":{"line":24,"column":1}},"13":{"start":{"line":20,"column":42},"end":{"line":24,"column":1}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":37}},"15":{"start":{"line":21,"column":28},"end":{"line":21,"column":35}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":34}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"18":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}}},"branchMap":{},"code":["'use strict';","","const {map} = require('..');","","/**","","### Functor","","1. `u.map(a => a)` is equivalent to `u` (identity)","2. `u.map(x => f(g(x)))` is equivalent to `u.map(g).map(f)` (composition)","","**/","","const identity = of => eq => x => {","  const a = of(x)[map](x => x);","  const b = of(x);","  return eq(a, b);","};","","const composition = of => eq => f => g => x => {","  const a = of(x)[map](x => f(g(x)));","  const b = of(x)[map](g)[map](f);","  return eq(a, b);","};","","module.exports = {identity, composition};",""],"l":{"3":1,"14":1,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/monad.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/monad.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":14,"column":26},"end":{"line":18,"column":1}},"4":{"start":{"line":14,"column":32},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":37},"end":{"line":18,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":31}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"9":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"10":{"start":{"line":20,"column":27},"end":{"line":24,"column":1}},"11":{"start":{"line":20,"column":33},"end":{"line":24,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":21}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}}},"branchMap":{},"code":["'use strict';","","const {of, chain} = require('..');","","/**","","### Monad","","1. `M.of(a).chain(f)` is equivalent to `f(a)` (left identity)","2. `m.chain(M.of)` is equivalent to `m` (right identity)","","**/","","const leftIdentity = t => eq => f => x => {","  const a = t[of](x)[chain](f);","  const b = f(x);","  return eq(a, b);","};","","const rightIdentity = t => eq => x => {","  const a = t[of](x)[chain](t[of]);","  const b = t[of](x);","  return eq(a, b);","};","","module.exports = {leftIdentity, rightIdentity};",""],"l":{"3":1,"14":1,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/monoid.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/monoid.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":14,"column":27},"end":{"line":18,"column":1}},"4":{"start":{"line":14,"column":33},"end":{"line":18,"column":1}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":41}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"8":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"9":{"start":{"line":20,"column":26},"end":{"line":24,"column":1}},"10":{"start":{"line":20,"column":32},"end":{"line":24,"column":1}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":41}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":21}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}}},"branchMap":{},"code":["'use strict';","","const {of, empty, concat} = require('..');","","/**","","### Monoid","","1. `m.concat(M.empty())` is equivalent to `m` (right identity)","2. `M.empty().concat(m)` is equivalent to `m` (left identity)","","**/","","const rightIdentity = T => eq => x => {","  const a = T[of](x)[concat](T[empty]());","  const b = T[of](x);","  return eq(a, b);","};","","const leftIdentity = T => eq => x => {","  const a = T[empty]()[concat](T[of](x));","  const b = T[of](x);","  return eq(a, b);","};","","module.exports = {rightIdentity, leftIdentity};",""],"l":{"3":1,"14":1,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/ord.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/ord.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":14,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":14,"column":23},"end":{"line":19,"column":1}},"4":{"start":{"line":14,"column":28},"end":{"line":19,"column":1}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":17}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}},"9":{"start":{"line":21,"column":0},"end":{"line":27,"column":2}},"10":{"start":{"line":21,"column":27},"end":{"line":27,"column":1}},"11":{"start":{"line":21,"column":32},"end":{"line":27,"column":1}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":22}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":22}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":42}},"17":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"18":{"start":{"line":29,"column":27},"end":{"line":35,"column":1}},"19":{"start":{"line":29,"column":32},"end":{"line":35,"column":1}},"20":{"start":{"line":29,"column":37},"end":{"line":35,"column":1}},"21":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"22":{"start":{"line":31,"column":2},"end":{"line":31,"column":22}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":22}},"24":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"25":{"start":{"line":34,"column":2},"end":{"line":34,"column":42}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":13}},{"start":{"line":18,"column":17},"end":{"line":18,"column":18}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":17}},{"start":{"line":26,"column":21},"end":{"line":26,"column":29}},{"start":{"line":26,"column":33},"end":{"line":26,"column":41}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":17}},{"start":{"line":34,"column":21},"end":{"line":34,"column":29}},{"start":{"line":34,"column":33},"end":{"line":34,"column":41}}]}},"code":["'use strict';","","const {lte, equals} = require('..');","","/**","   ### Ord","","   1. `a.lte(b)` or `b.lte(a)` (totality)","   2. If `a.lte(b)` and `b.lte(a)`, then `a.equals(b)` (antisymmetry)","   3. If `a.lte(b)` and `b.lte(c)`, then `a.lte(c)` (transitivity)","","**/","","const totality = eq => f => g => {","  const a = f[lte](g);","  const b = g[lte](f);","  const c = true;","  return eq(a || b, c);","};","","const antisymmetry = eq => f => g => {","  const a = f[lte](g);","  const b = g[lte](f);","  const c = f[equals](g);","  const d = true;","  return eq(a, d) && eq(b, d) && eq(c, d);","};","","const transitivity = eq => f => g => h => {","  const a = f[lte](g);","  const b = g[lte](h);","  const c = f[lte](h);","  const d = true;","  return eq(a, d) && eq(b, d) && eq(c, d);","};","","module.exports = {totality, antisymmetry, transitivity};",""],"l":{"3":1,"14":1,"15":0,"16":0,"17":0,"18":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/plus.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/plus.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":15,"column":27},"end":{"line":18,"column":1}},"4":{"start":{"line":15,"column":33},"end":{"line":18,"column":1}},"5":{"start":{"line":15,"column":38},"end":{"line":18,"column":1}},"6":{"start":{"line":20,"column":0},"end":{"line":23,"column":2}},"7":{"start":{"line":20,"column":26},"end":{"line":23,"column":1}},"8":{"start":{"line":20,"column":32},"end":{"line":23,"column":1}},"9":{"start":{"line":20,"column":37},"end":{"line":23,"column":1}},"10":{"start":{"line":25,"column":0},"end":{"line":28,"column":2}},"11":{"start":{"line":25,"column":26},"end":{"line":28,"column":1}},"12":{"start":{"line":25,"column":32},"end":{"line":28,"column":1}},"13":{"start":{"line":25,"column":37},"end":{"line":28,"column":1}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":61}}},"branchMap":{},"code":["'use strict';","","const {zero, alt, map} = require('..');","","/**","","### Alt","","1. `x.alt(A.zero())` is equivalent to `x` (right identity)","2. `A.zero().alt(x)` is equivalent to `x` (left identity)","2. `A.zero().map(f)` is equivalent to `A.zero()` (annihilation)","","**/","","const rightIdentity = T => eq => x => eq(","  T[zero]()[alt](x),","  x",");","","const leftIdentity = T => eq => x => eq(","  x[alt](T[zero]()),","  x",");","","const annihilation = T => eq => f => eq(","  T[zero]()[map](f),","  T[zero]()",");","","module.exports = {rightIdentity, leftIdentity, annihilation};",""],"l":{"3":1,"15":1,"20":1,"25":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/profunctor.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/profunctor.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":14,"column":23},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":29},"end":{"line":18,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":45}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"9":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"10":{"start":{"line":20,"column":25},"end":{"line":24,"column":1}},"11":{"start":{"line":20,"column":31},"end":{"line":24,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":83}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":73}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}}},"branchMap":{},"code":["'use strict';","","const {identity, compose} = require('fantasy-combinators');","const {promap} = require('..');","","/**","### Profunctor","","1. `p.promap(a => a, b => b)` is equivalent to `p` (identity)","2. `p.promap(compose(f1)(f2), compose(g1)(g2))` is equivalent to `p.promap(f1, g1).promap(f2, g2)` (composition)","","**/","","const identityʹ = t => eq => x => {","  const a = t(x)[promap](identity, identity);","  const b = t(x);","  return eq(a, b);","};","","const composition = t => eq => x => {","  const a = t(x)[promap](compose(identity)(identity), compose(identity)(identity));","  const b = t(x)[promap](identity, identity)[promap](identity, identity);","  return eq(a, b);","};","","module.exports = {identity: identityʹ, composition};",""],"l":{"3":1,"4":1,"14":1,"15":0,"16":0,"17":0,"20":1,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/semigroup.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/semigroup.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":13,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":13,"column":27},"end":{"line":21,"column":1}},"4":{"start":{"line":13,"column":33},"end":{"line":21,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":17}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":17}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":36}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}}},"branchMap":{},"code":["'use strict';","","const {concat} = require('..');","","/**","","### Semigroup","","1. `a.concat(b).concat(c)` is equivalent to `a.concat(b.concat(c))` (associativity)","","**/","","const associativity = t => eq => x => {","  const f = t(x);","  const g = t(x);","  const h = t(x);","","  const a = f[concat](g)[concat](h);","  const b = f[concat](g[concat](h));","  return eq(a, b);","};","","module.exports = {associativity};",""],"l":{"3":1,"13":1,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/setoid.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/setoid.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":15,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":15,"column":25},"end":{"line":21,"column":1}},"4":{"start":{"line":15,"column":31},"end":{"line":21,"column":1}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":17}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"9":{"start":{"line":23,"column":0},"end":{"line":30,"column":2}},"10":{"start":{"line":23,"column":22},"end":{"line":30,"column":1}},"11":{"start":{"line":23,"column":28},"end":{"line":30,"column":1}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"17":{"start":{"line":32,"column":0},"end":{"line":41,"column":2}},"18":{"start":{"line":32,"column":26},"end":{"line":41,"column":1}},"19":{"start":{"line":32,"column":32},"end":{"line":41,"column":1}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"21":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"22":{"start":{"line":35,"column":2},"end":{"line":35,"column":17}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}},"24":{"start":{"line":38,"column":2},"end":{"line":38,"column":25}},"25":{"start":{"line":39,"column":2},"end":{"line":39,"column":25}},"26":{"start":{"line":40,"column":2},"end":{"line":40,"column":23}},"27":{"start":{"line":43,"column":0},"end":{"line":43,"column":55}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":13}},{"start":{"line":40,"column":17},"end":{"line":40,"column":18}}]}},"code":["'use strict';","","const {equals} = require('..');","","/**","","### Setoid","","1. `a.equals(a) === true` (reflexivity)","2. `a.equals(b) === b.equals(a)` (symmetry)","3. If `a.equals(b)` and `b.equals(c)`, then `a.equals(c)` (transitivity)","","**/","","const reflexivity = t => eq => x => {","  const y = t(x);","","  const a = y[equals](y);","  const b = true;","  return eq(a, b);","};","","const symmetry = t => eq => x => {","  const f = t(x);","  const g = t(x);","","  const a = f[equals](g);","  const b = g[equals](f);","  return eq(a, b);","};","","const transitivity = t => eq => x => {","  const f = t(x);","  const g = t(x);","  const h = t(x);","","  const a = f[equals](g);","  const b = g[equals](h);","  const c = f[equals](h);","  return eq(a && b, c);","};","","module.exports = {reflexivity, symmetry, transitivity};",""],"l":{"3":1,"15":1,"16":0,"18":0,"19":0,"20":0,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"32":1,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/traversable.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/laws/traversable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":23,"column":0},"end":{"line":27,"column":2}},"5":{"start":{"line":23,"column":24},"end":{"line":27,"column":1}},"6":{"start":{"line":23,"column":29},"end":{"line":27,"column":1}},"7":{"start":{"line":23,"column":35},"end":{"line":27,"column":1}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":48}},"9":{"start":{"line":24,"column":44},"end":{"line":24,"column":45}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":40}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"12":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"13":{"start":{"line":29,"column":23},"end":{"line":35,"column":1}},"14":{"start":{"line":29,"column":29},"end":{"line":35,"column":1}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}},"16":{"start":{"line":32,"column":2},"end":{"line":32,"column":34}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"19":{"start":{"line":37,"column":0},"end":{"line":41,"column":2}},"20":{"start":{"line":37,"column":25},"end":{"line":41,"column":1}},"21":{"start":{"line":37,"column":30},"end":{"line":41,"column":1}},"22":{"start":{"line":37,"column":36},"end":{"line":41,"column":1}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":45}},"24":{"start":{"line":39,"column":2},"end":{"line":39,"column":83}},"25":{"start":{"line":39,"column":44},"end":{"line":39,"column":45}},"26":{"start":{"line":39,"column":57},"end":{"line":39,"column":80}},"27":{"start":{"line":39,"column":78},"end":{"line":39,"column":79}},"28":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"29":{"start":{"line":43,"column":0},"end":{"line":43,"column":64}}},"branchMap":{},"code":["'use strict';","","const {Id, Compose} = require('../internal');","const {identity} = require('fantasy-combinators');","const {of, traverse, map} = require('..');","","/**","","### Traversable","","1. `t(u.traverse(F, x => x))` is equivalent to `u.traverse(G, t)` for any","   `t` such that `t(a).map(f)` is equivalent to `t(a.map(f))` (naturality)","","2. `u.traverse(F, F.of)` is equivalent to `F.of(u)` for any Applicative `F`","   (identity)","","3. `u.traverse(Compose, x => new Compose(x))` is equivalent to","   `new Compose(u.traverse(F, x => x).map(x => x.traverse(G, x => x)))` for","   `Compose` defined below and any Applicatives `F` and `G` (composition)","","**/","","const naturality = T => t => eq => x => {","  const a = identity(t(x)[traverse](T, y => y));","  const b = t(x)[traverse](T, identity);","  return eq(a, b);","};","","const identityʹ = T => eq => x => {","  const u = [x];","","  const a = u[traverse](T, T[of]);","  const b = T[of](u);","  return eq(a, b);","};","","const composition = T => t => eq => x => {","  const a = t(x)[traverse](Compose, Compose);","  const b = Compose(t(x)[traverse](Id, y => y)[map](x => x[traverse](Id, y => y)));","  return eq(a, b);","};","","module.exports = {naturality, identity: identityʹ, composition};",""],"l":{"3":1,"4":1,"5":1,"23":1,"24":0,"25":0,"26":0,"29":1,"30":0,"32":0,"33":0,"34":0,"37":1,"38":0,"39":0,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fantasy-land/node_modules/fantasy-land/internal/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":2}}},"branchMap":{},"code":["'use strict';","","const patch = require('./patch');","const Id = require('./id');","const Sum = require('./string_sum');","const Compose = require('./compose');","const {equality} = require('./func');","","module.exports = {","  Id,","  Sum,","  Compose,","  equality,","  patch,","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1}}}